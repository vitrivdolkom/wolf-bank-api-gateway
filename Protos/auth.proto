syntax = "proto3";

package users.v1;

option csharp_namespace = "WolfBankGateway.Protos.Services";

enum Role {
    USER = 0;
    EMPLOYEE = 1;
    ADMIN = 2;
}

service PublicUserService {
    rpc Register(RegisterRequest) returns (RegisterResponse) {};
    rpc Login(LoginRequest) returns (LoginResponse) {};
    rpc Logout(LogoutRequest) returns (LogoutResponse) {};
    rpc Revalidate(RevalidateRequest) returns (RevalidateResponse) {};
}

service InternalUserService {
    rpc GetProfile(GetProfileRequest) returns (GetProfileResponse) {};
    rpc AssignAdmin(AssignAdminRequest) returns (AssignAdminResponse) {};
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {};
    rpc CreateEmployee(CreateEmployeeRequest) returns (CreateEmployeeResponse) {};
    rpc BanUser(BanUserRequest) returns (BanUserResponse) {};
    rpc Authorize(AuthorizeRequest) returns (AuthorizeResponse) {};
    rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {};
}

message ListUsersRequest {
    int32 page = 1;
    int32 page_size = 2;
    string email_filter = 3;
}

message ListUsersResponse {
    repeated User users = 1;
    int32 total = 2;
}

message User {
    string id = 1;
    string email = 2;
    Role role = 3;
} 

message AuthorizeRequest {}

message AuthorizeResponse {
    bool is_valid = 1; 
    string user_id = 2;
    Role role = 3;
    string message = 4;
}

message LogoutRequest {}

message LogoutResponse {
    string message = 1;
}

message RevalidateRequest {}

message RevalidateResponse {
    string token = 1;
    string message = 2;
}

message RegisterRequest {
    string email = 1;
    string password = 2;
    Role role = 3;
}

message RegisterResponse {
    string message = 1;
    string token = 2;
}

message LoginRequest {
    string email = 1;
    string password = 2;
}

message LoginResponse {
    string token = 1;
    string message = 2;
}

message GetProfileRequest {}

message GetProfileResponse {
    string id = 1;
    string username = 2;
    string email = 3;
    Role role = 4;
}

message AssignAdminRequest {
    string user_id = 1; 
}

message AssignAdminResponse {
    string message = 1;
}

message CreateUserRequest {
    string email = 1;
    string password = 2;
}

message CreateUserResponse {
    string message = 1;
    string user_id = 2;
}

message CreateEmployeeRequest {
    string email = 1;
    string password = 2;
}

message CreateEmployeeResponse {
    string message = 1;
    string user_id = 2;
}

message BanUserRequest {
    string user_id = 1;
}

message BanUserResponse {
    string message = 1;
}